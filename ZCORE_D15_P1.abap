REPORT zcore_d15_p1.


************** DAY 15************

************************ INTERNAL TABLES ***************************
""""" INTERNAL TABLES - IS A TEMPERORY TABLE CREATED IN THE APPLICATION SERVER. THE LIFETIME IS ONLY DURING PROGRAM RUNTIME AND THE MEMORY FOR INTERNAL TABLE IS DESTROYED.
""""" INTERNAL TABLES CLASSIFIED INTO 2 TYPES
"""""                 1) INDEXED- A) STANDARD INTERNAL TABLE B) SORTED INTERNAL TABLE .
"""""                 2)NON-INDEXED - HASHED INTERNAL TABLE.

"""""""""""""" HOW TO FILL DATA MANUALLY


TYPES : BEGIN OF gty_emp,
          empno        TYPE i,
          ename(20)    TYPE c,
          empdesig(25) TYPE c,
        END OF gty_emp.

"""""""" INTERNAL TABLE CAN BE CREATED WITH HEADER OR WITHOUT HEADER (ALWAYS RECOMMENDED TO CREATE INTERNAL TABLE WITHOUT HEADER)

"""""""" CREATING INTERNAL TABLE WITH HEADER

*DATA : GT_EMP1 TYPE TABLE OF GTY_EMP WITH HEADER LINE.  (OR)(BY DEFAULT IT CONSIDERS IT AS STANDARD INTERNAL TABLE)

DATA : gt_emp1 TYPE STANDARD TABLE OF gty_emp WITH HEADER LINE.            """""" BODY CAN STORE MUTIPLE RECORDS WHILE HEADER IS NOTHING BUT WORKAREA



"""" NOTE - IF YOU ARE FILLING DATA MANUALLY YOU CANNOT STORE IT DIRECTLY IN THE BODY AREA HENCE WILL HAVE TO FIRST STORE IT IN WORK AREA AND THEN WE HAVE TO COPY TO BODY
"""" NOTE - BEFORE WE STORE DATA IN ANY VARIABLE CLEAR THE OLD WORK AREA.

"""" RECORD 1

CLEAR gt_emp1.         """""""" CLEARS DEFAULT HEADER AREA.

gt_emp1-empno = 4.               """""""" THIS STORES DATA IN THE HEADER
gt_emp1-ename = 'SURAJ'.
gt_emp1-empdesig = 'MANAGER'.

APPEND gt_emp1.              """""" THIS COPIES DATA FROM HEADER TO BODY AREA.

"""" RECORD 2

CLEAR gt_emp1.               """""" THIS CLEARS THE HEADER AGAIN

gt_emp1-empno = 17.               """""""" THIS STORES DATA IN THE HEADER
gt_emp1-ename = 'RAHUL'.
gt_emp1-empdesig = 'DIRECTOR'.

APPEND gt_emp1.                   """""""" COPIES DATA FROM HEADER TO END OF INTERNAL TABLE.

"""" RECORD 3

CLEAR gt_emp1.               """""" THIS CLEARS THE HEADER AGAIN

gt_emp1-empno = 2.               """""""" THIS STORES DATA IN THE HEADER
gt_emp1-ename = 'SONU'.
gt_emp1-empdesig = 'CEO'.

APPEND gt_emp1.                   """""""" COPIES DATA FROM HEADER TO END OF INTERNAL TABLE.


"""" NOTE - AT ANY POINT OF TIME WORK AREA WILL CONTAIN ONLY SINGLE RECORD . HERE OUR WORK AREA IS HEADER



WRITE :/ 'DATA IN INTERNAL TABLE DEFAULT HEADER.'.
WRITE :/ gt_emp1-empno, gt_emp1-ename, gt_emp1-empdesig.            """"" REFERS TO HEADER

"""""""" NOW WRITING DATA IN INTERNAL TABLE BODY """"""""""'

WRITE :/ 'DATA IN INTERNAL TABLE BODY'.

"""" NOTE - WRITE STATEMENT CAN ONLY REFER TO THE HEADER

LOOP AT gt_emp1.                  """" THE STATEMENTS IN THE LOOPING STATEMENT WILL KEEP ON EXECUTING UNTILL THE CONDITION REMAINS TRUE.


  WRITE :/ gt_emp1-empno, gt_emp1-ename, gt_emp1-empdesig, sy-tabix.


ENDLOOP.

ULINE.
WRITE :/ 'DATA IN INTERNAL TABLE BODY FROM 1 TO 2'.

LOOP AT gt_emp1 FROM 1 TO 2.                  """" THE STATEMENTS IN THE LOOPING STATEMENT WILL KEEP ON EXECUTING UNTILL THE CONDITION REMAINS TRUE.


  WRITE :/ gt_emp1-empno, gt_emp1-ename, gt_emp1-empdesig.


ENDLOOP.

ULINE.

WRITE :/ 'DATA IN INTERNAL TABLE BODY WHERE EMPDESIG IS EQUAL TO MANAGER'.

LOOP AT gt_emp1 WHERE empdesig = 'MANAGER'.                  """" THE STATEMENTS IN THE LOOPING STATEMENT WILL KEEP ON EXECUTING UNTILL THE CONDITION REMAINS TRUE.
  """" NOTE - DATA IS CASE SENSITIVE

  WRITE :/ gt_emp1-empno, gt_emp1-ename, gt_emp1-empdesig.


ENDLOOP.


""""""""" NOW COUNTING HOW MANY RECORDS ARE THERE IN THE INTERNAL TABLE """""""""""""

ULINE.

DESCRIBE TABLE gt_emp1.              """""" DESCRIBE WILL COUNT THE NUMBER OF RECORDS IN THE INTERNAL TABLE AND STORES THE COUNT VALUE IN THE SYSTEM FIELD SY-TFILL.
                                     """""" HAVE TO USE DESCRIBE AND SY-TFILL IN COMBINATION


WRITE :/ 'NO OF RECORDS IN GT_EMP1 IS ', sy-tfill.


CLEAR GT_EMP1[].                     """""" THIS CLEARS THE BODY OF INTERNAL TABLE THUS ADD [] AT THE END.


ULINE.

""""""""" COUNTING AGAIN """""""""""""


DESCRIBE TABLE gt_emp1.              """""" DESCRIBE WILL COUNT THE NUMBER OF RECORDS IN THE INTERNAL TABLE AND STORES THE COUNT VALUE IN THE SYSTEM FIELD SY-TFILL.
                                     """""" HAVE TO USE DESCRIBE AND SY-TFILL IN COMBINATION


WRITE :/ 'NO OF RECORDS IN GT_EMP1 AFTER CLEAR ', sy-tfill.




""""""""""""""" NOW CREATING INTERNAL TABLE WITHOUT HEADER """""""""""""""""""
ULINE.


DATA : GT_EMP2 TYPE TABLE OF GTY_EMP.                 """""" INTERNAL TABLE WITHOUT DEFAULT HEADER

""""""""" COUNTING AGAIN """""""""""""


DESCRIBE TABLE gt_emp1.              """""" DESCRIBE WILL COUNT THE NUMBER OF RECORDS IN THE INTERNAL TABLE AND STORES THE COUNT VALUE IN THE SYSTEM FIELD SY-TFILL.
                                     """""" HAVE TO USE DESCRIBE AND SY-TFILL IN COMBINATION


WRITE :/ 'NO OF RECORDS IN GT_EMP2', sy-tfill.

""""""""" NOW COPYING DATA BETWEEN INTERNAL TABLE """""""""""""
WRITE :/ 'AFTER COPYING DATA BETWEEN GT_EMP1 TO GT_EMP2.'.

APPEND LINES OF GT_EMP1 TO GT_EMP2.


""""""""" COUNTING AGAIN """""""""""""


DESCRIBE TABLE gt_emp1.              """""" DESCRIBE WILL COUNT THE NUMBER OF RECORDS IN THE INTERNAL TABLE AND STORES THE COUNT VALUE IN THE SYSTEM FIELD SY-TFILL.
                                     """""" HAVE TO USE DESCRIBE AND SY-TFILL IN COMBINATION


WRITE :/ 'NO OF RECORDS IN GT_EMP2', sy-tfill.



"""" NOTE - CAN CLEAR THE DATA IN THE INTERNAL TABLE USING 3 WAYS 1)CLEAR , 2)REFRESH , 3) FREE
****            1)CLEAR IS ONLY FOR INTERNAL TABLE , WORK AREA, VARIBLE.
****            2)REFRESH REFRESH DOESN'T DEALLOCATE THE MEMORY
****            3)FREE - IT WILL CLEAR RECORDS AND DEALLOCATES THE MEMORY AND GETS INTERNAL TABLE TO INITIAL STATE.






""""""""" SUMMARY - STHUS IT IS RECOMMENDED NOT TO USE INTERNAL TABLE WITH HEADER AND ALSO FREE IS BETTER THAN REFRESH PERFORMANCE WISE.
